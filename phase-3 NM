import numpy as np
import pandas as pd
from sklearn.linear_model import LinearRegression

# Step 1: Simulate 1st 24h energy consumption data
np.random.seed(0)
hours = np.arange(0, 24)
consumption = 50 + 10 * np.sin((np.pi / 12) * hours) + np.random.normal(0, 3, 24)

df = pd.DataFrame({
    'Hour': hours,
    'Energy_Consumption_kWh': consumption
})

# Step 2: Predict future consumption using Linear Regression
x = df[['Hour']]
y = df['Energy_Consumption_kWh']

model = LinearRegression()
model.fit(x, y)

# Predict for next 6 hours
future_hours = pd.DataFrame({'Hour': np.arange(24, 30)})
future_predictions = model.predict(future_hours)

# Step 3: Simple optimization - Adjust supply based on predictions
adjusted_supply = [round(x + 2) for x in future_predictions]  # buffer for peak demand

# Step 4: Display results
print("Future Hours (24-29):")
print(future_hours)

print("\nPredicted Energy Demand (kWh):")
print(np.round(future_predictions, 2))

print("\nOptimized Energy Supply with Buffer (kWh):")
print(adjusted_supply)
